"use strict";(self.webpackChunkdocumentation_api=self.webpackChunkdocumentation_api||[]).push([[163],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=u(n),m=o,f=p["".concat(s,".").concat(m)]||p[m]||c[m]||r;return n?a.createElement(f,l(l({ref:t},d),{},{components:n})):a.createElement(f,l({ref:t},d))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:o,l[1]=i;for(var u=2;u<r;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7586:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>u});var a=n(7462),o=(n(7294),n(3905));const r={},l=void 0,i={unversionedId:"documentation-api/How to deploy in different languages/deploy-and-translation",id:"documentation-api/How to deploy in different languages/deploy-and-translation",title:"deploy-and-translation",description:"Deploy",source:"@site/docs/documentation-api/How to deploy in different languages/deploy-and-translation.md",sourceDirName:"documentation-api/How to deploy in different languages",slug:"/documentation-api/How to deploy in different languages/deploy-and-translation",permalink:"/documentation/docs/documentation-api/How to deploy in different languages/deploy-and-translation",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/documentation-api/How to deploy in different languages/deploy-and-translation.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Community Supported Features",permalink:"/documentation/docs/documentation-api/Community Supported Features"},next:{title:"MobeeLimitations",permalink:"/documentation/docs/documentation-api/MobeeLimitations"}},s={},u=[{value:"Deploy",id:"deploy",level:2},{value:"Translate Markdown files",id:"translate-markdown-files",level:2},{value:"Automated Sidebar Generation",id:"automated-sidebar-generation",level:2}],d={toc:u},p="wrapper";function c(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"deploy"},"Deploy"),(0,o.kt)("p",null,"To deploy your changes, you need to execute these commands:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm run build\nGIT_USER=<github_username> yarn deploy\n")),(0,o.kt)("h2",{id:"translate-markdown-files"},"Translate Markdown files"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Open the docusaurus.config.js file and add the following code snippet to enable language translation features:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"items: [\n  {\n    type: 'localeDropdown',\n    position: 'right',\n  }\n],\ni18n: {\n  defaultLocale: 'en',\n  locales: ['en', 'fr', 'esp'],\n  localeConfigs: {\n    en: {\n      label: 'English',\n    },\n    fr: {\n      label: 'Fran\xe7ais',\n    },\n    esp: {\n      label: 'Espa\xf1ol',\n    },\n  },\n},\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"To translate your documentation Markdown files, follow these steps:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Create the necessary directory structure for translations:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p i18n/<language>/docusaurus-plugin-content-docs/current\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Copy your existing documentation Markdown files from the docs/ directory to the translation directory:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cp -r docs/** i18n/<language>/docusaurus-plugin-content-docs/current\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Additionally, if you have other content like blogs and Components, you can copy them from your project to the translation directory as well.")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Translate these files as needed."),(0,o.kt)("li",{parentName:"ul"},"Run the translation command for the documentation:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm run write-translations -- --locale <language>\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"Please make sure to replace `<language>` with the appropriate language code in the paths and commands.\n")),(0,o.kt)("h2",{id:"automated-sidebar-generation"},"Automated Sidebar Generation"),(0,o.kt)("p",null,"The sidebars in your case are automatically generated. You only need to include the following code snippet:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"@type {import('@docusaurus/plugin-content-docs').SidebarsConfig}\nconst sidebars = {\n  tutorialSidebar: [{type: 'autogenerated', dirName: '.'}],\n};\n")),(0,o.kt)("p",null,"This will generate sidebars based on the directory structure of your documentation files. You don't need to manually update the sidebars when adding new content."))}c.isMDXComponent=!0}}]);