[{"title":"Mobee Documentation","type":0,"sectionRef":"#","url":"/documentation/docs/documentation-api/","content":"Mobee Documentation Mobee Documentation is a comprehensive guide that provides information and resources on setting up and using Mobee, a powerful platform for managing your community. Feel free to explore the different sections.","keywords":""},{"title":"Introduction","type":0,"sectionRef":"#","url":"/documentation/docs/documentation-api/Document Generation Module/mobee-document-introduction","content":"","keywords":""},{"title":"Purpose​","type":1,"pageTitle":"Introduction","url":"/documentation/docs/documentation-api/Document Generation Module/mobee-document-introduction#purpose","content":"The primary purpose of the Mobee Document Generation Module is to facilitate the creation of customized documents based on predefined templates. These documents can range from individualized reports to bulk-generation for multiple records, offering flexibility to adapt to various use cases within Salesforce. "},{"title":"Fulfilling Business Needs​","type":1,"pageTitle":"Introduction","url":"/documentation/docs/documentation-api/Document Generation Module/mobee-document-introduction#fulfilling-business-needs","content":"Efficiency and Productivity: The module enhances operational efficiency by providing quick and user-friendly document generation tools, reducing manual effort. Customization: With support for various templates, filters, and dynamic placeholders, Mobee allows users to tailor document outputs to specific business requirements. Automation: The ability to automate document generation processes ensures consistency and accuracy, especially in scenarios involving repetitive tasks or batch processing. Integration: Seamless integration into Salesforce workflows ensures that document generation is an integral part of the overall business processes. Whether fulfilling the need for on-the-fly document creation, bulk-generation for reporting, or automated document production, the Mobee Document Generation Module serves as a comprehensive solution within the Salesforce environment, catering to a wide array of use cases. "},{"title":"Mobee Community Setup","type":0,"sectionRef":"#","url":"/documentation/docs/documentation-api/Community/Mobee Community Setup","content":"","keywords":""},{"title":"Setup Mobee Community​","type":1,"pageTitle":"Mobee Community Setup","url":"/documentation/docs/documentation-api/Community/Mobee Community Setup#setup-mobee-community","content":"Salesforce does not allow community users to access some metadata using the API. To work around these limitations and optimize governor limits, Mobee provides a set of automated tools that extract the required metadata, including pages from Experience Cloud and other resources. The Mobee automated tools generate JSON files and zip files for the metadata records resources that will be included in the static resource. To set up Mobee Community, follow the steps below: Execute the Mobee procedure provided with the AppExchange. Provide the name of the Experience Cloud Site and any additional languages required. Mobee.SetupUtils.prepareMobeeResources('Customer_Site1', 'fr'); You can also run the individual tools using the following sub-procedures: Mobee.SetupUtils.refreshCoreMetadata(); Mobee.SetupUtils.refreshCustomLabel(); Mobee.SetupUtils.refreshExternalStringLocalization('fr'); Mobee.SetupUtils.siteExperienceBundleQueueable('Customer_Site1');  It is important to run these automated tools for the first time and each time you publish your Experience Cloud Site. The estimated time for running the tools is about 2 minutes. The output of the procedure will generate the following files in the Static Resources directory: Resource\tDescriptionMobee_CoreMetadata\tContains the main metadata of the Salesforce Core System, such as Validation Rules, Web Links, Lookup Filters, and Flow definitions. Mobee_CoreCustomLabel\tContains the custom labels. Mobee_CoreExternalStringLocalization\tContains the translated custom labels for the specified language. Mobee_Community_Customer_Site1\tContains the Experience Cloud Site pages, themes, and other resources. How to verify if your resources are up to date? Check the last modified date of the output files to ensure that the files are up to date. "},{"title":"Output files in the Static Resources​","type":1,"pageTitle":"Mobee Community Setup","url":"/documentation/docs/documentation-api/Community/Mobee Community Setup#output-files-in-the-static-resources","content":"File\tType\tDescriptionMobee_CoreMetadata\tJson File\tMobee Core Metadata listes Mobee_CoreCustomLabel\tJson File\tMobee Core CustomLabels Mobee_CoreExternalStringLocalization\tJson File\tMobee Core ExternalStringLocalization Mobee_Community_Customer_Site1\tZip File\tSite pages, components, and properties "},{"title":"Mobee Mobile App Installation Guide","type":0,"sectionRef":"#","url":"/documentation/docs/documentation-api/Mobee Installation Guide/mobile-app-installation-guide","content":"","keywords":""},{"title":"1. Installation:​","type":1,"pageTitle":"Mobee Mobile App Installation Guide","url":"/documentation/docs/documentation-api/Mobee Installation Guide/mobile-app-installation-guide#1-installation","content":"Download and install the Mobee Mobile App from the App Store (for iOS devices) or Google Play Store (for Android devices). "},{"title":"2. Initial Setup:​","type":1,"pageTitle":"Mobee Mobile App Installation Guide","url":"/documentation/docs/documentation-api/Mobee Installation Guide/mobile-app-installation-guide#2-initial-setup","content":"Launch the app. Upon opening, a login prompt will appear.Use your Salesforce credentials for logging in.Modify the connection server based on your requirements: choose from Production, Sandbox, or Custom Domain. "},{"title":"3. Confirmation and Access Permissions:​","type":1,"pageTitle":"Mobee Mobile App Installation Guide","url":"/documentation/docs/documentation-api/Mobee Installation Guide/mobile-app-installation-guide#3-confirmation-and-access-permissions","content":"After logging in, you'll receive a confirmation code. Enter this code as prompted.For seamless operation, grant the necessary permissions when requested by the app. "},{"title":"4. Synchronization:​","type":1,"pageTitle":"Mobee Mobile App Installation Guide","url":"/documentation/docs/documentation-api/Mobee Installation Guide/mobile-app-installation-guide#4-synchronization","content":"Upon successful login, you'll be greeted with a splash screen detailing the synchronization process.This step's duration varies based on the volume of data to synchronize.  "},{"title":"5. Optimizing Synchronization:​","type":1,"pageTitle":"Mobee Mobile App Installation Guide","url":"/documentation/docs/documentation-api/Mobee Installation Guide/mobile-app-installation-guide#5-optimizing-synchronization","content":"For a faster sync, consider limiting the number of objects you wish to synchronize.Utilize the “List View Filter” and the “File Sync Down” options available in Mobee Object Setup. Note: Disabling the “File Sync Down” option will stop files from being downloaded to your device. However, any attachment created by users will still be uploaded. "},{"title":"6. Offline Access:​","type":1,"pageTitle":"Mobee Mobile App Installation Guide","url":"/documentation/docs/documentation-api/Mobee Installation Guide/mobile-app-installation-guide#6-offline-access","content":"Once data synchronization is complete, you can access the Home Pages, App Pages, Listviews, and Record Pages entirely offline.  Congratulations! You've successfully set up and are now using the Mobee App tool with your Salesforce org and mobile device. "},{"title":"Community Supported Features","type":0,"sectionRef":"#","url":"/documentation/docs/documentation-api/Community/Community Supported Features","content":"","keywords":""},{"title":"Supported Theme and Branding in Community​","type":1,"pageTitle":"Community Supported Features","url":"/documentation/docs/documentation-api/Community/Community Supported Features#supported-theme-and-branding-in-community","content":"Colors Settings Name\tSupported In MobeeText Color\t✅ Detail Text Color\t✅ Action Color\t✅ Link Color\t✅ Overlay Text Color Border Color Page Background Color\t✅ "},{"title":"Supported Chatter Type in Community​","type":1,"pageTitle":"Community Supported Features","url":"/documentation/docs/documentation-api/Community/Community Supported Features#supported-chatter-type-in-community","content":"Chatter Type\tCreate\tComment\tLikePost\t✅\t✅\t✅ Question Poll  "},{"title":"Mobee AppExchange Installation Guide","type":0,"sectionRef":"#","url":"/documentation/docs/documentation-api/Mobee Installation Guide/package-installation-guide","content":"","keywords":""},{"title":"Salesforce AppExchange Package​","type":1,"pageTitle":"Mobee AppExchange Installation Guide","url":"/documentation/docs/documentation-api/Mobee Installation Guide/package-installation-guide#salesforce-appexchange-package","content":"To install the Mobee App Package from the AppExchange, follow the steps below: "},{"title":"1. Navigate to Mobee App Page:​","type":1,"pageTitle":"Mobee AppExchange Installation Guide","url":"/documentation/docs/documentation-api/Mobee Installation Guide/package-installation-guide#1-navigate-to-mobee-app-page","content":"Launch your web browser. Access the Mobee App page on AppExchange using the following link: Mobee App on AppExchange. "},{"title":"2. Install the Package:​","type":1,"pageTitle":"Mobee AppExchange Installation Guide","url":"/documentation/docs/documentation-api/Mobee Installation Guide/package-installation-guide#2-install-the-package","content":"Click on the &quot;Get It Now&quot; button.Choose the Salesforce org where you'd like to install the package. "},{"title":"3. User Management & Permission Assignment:​","type":1,"pageTitle":"Mobee AppExchange Installation Guide","url":"/documentation/docs/documentation-api/Mobee Installation Guide/package-installation-guide#3-user-management--permission-assignment","content":"Navigate to the user management page in Salesforce. Select a user. Assign the required permissions based on your operational requirements (options include: Mobee Administrator, Mobee User, Mobee Community Administrator, Mobee Community User, Mobee Time And Expenses Administrator, Mobee Time And Expenses User). "},{"title":"4. License Management:​","type":1,"pageTitle":"Mobee AppExchange Installation Guide","url":"/documentation/docs/documentation-api/Mobee Installation Guide/package-installation-guide#4-license-management","content":"Go to the Setup Page. Access the “Installed Packages” section. Click on the “Manage Licenses” link adjacent to the Mobee Package. This is where you can allocate licenses to specific users. "},{"title":"5. Mobee Object Setup:​","type":1,"pageTitle":"Mobee AppExchange Installation Guide","url":"/documentation/docs/documentation-api/Mobee Installation Guide/package-installation-guide#5-mobee-object-setup","content":"If you're a Mobee Administrator user, head over to the “Mobee Object Setup” tab.This tab is crucial for determining the objects that will synchronize with the mobile app. "},{"title":"6. Define Synchronization Settings:​","type":1,"pageTitle":"Mobee AppExchange Installation Guide","url":"/documentation/docs/documentation-api/Mobee Installation Guide/package-installation-guide#6-define-synchronization-settings","content":"Input the Object API Name. Adjust the settings as per your requirements. "},{"title":"7. Finalizing the Setup:​","type":1,"pageTitle":"Mobee AppExchange Installation Guide","url":"/documentation/docs/documentation-api/Mobee Installation Guide/package-installation-guide#7-finalizing-the-setup","content":"Upon finalizing your synchronization objects, users granted the correct permissions can now download and utilize the mobile application on both iOS and Android platforms. "},{"title":"Configuration and Usage","type":0,"sectionRef":"#","url":"/documentation/docs/documentation-api/Document Generation Module/mobee-document-configuration","content":"","keywords":""},{"title":"User Profile Requirements and Permissions​","type":1,"pageTitle":"Configuration and Usage","url":"/documentation/docs/documentation-api/Document Generation Module/mobee-document-configuration#user-profile-requirements-and-permissions","content":"To utilize the module, users must meet the following prerequisites: Possession of a Mobee license.Assignment of either the &quot;Mobee User&quot; or &quot;Mobee Administrator&quot; permission set.Activation of the &quot;Flow User&quot; option if needed. "},{"title":"Creating a Document Template​","type":1,"pageTitle":"Configuration and Usage","url":"/documentation/docs/documentation-api/Document Generation Module/mobee-document-configuration#creating-a-document-template","content":"Navigate to the Mobee Documents Templates Salesforce Tab to initiate the creation of a new template.Click on the &quot;New&quot; button and furnish a suitable name for the template.  After the successful creation of the template, the next step involves associating it with a specific Salesforce object. Follow the steps below: Access the newly created template by selecting its name from the list.Within the initial section, click the &quot;Choose Main Object&quot; button located on the right.Utilize the lookup search field to designate the desired main object.Opt for a Salesforce field on the selected object to serve as the naming convention for the generated file. Supported types include text fields and formulas. The Name field is selected by default.  After the selection of the main object and naming field, proceed to upload your Word document template by selecting the &quot;Upload&quot; button. Please note that only files with the .docx extension are supported.  "},{"title":"Generate Documents from Template​","type":1,"pageTitle":"Configuration and Usage","url":"/documentation/docs/documentation-api/Document Generation Module/mobee-document-configuration#generate-documents-from-template","content":"Mobee offers a range of options to facilitate document generation tailored to your specific requirements. The package encompasses pre-built components ready for immediate use, seamlessly integratable into your pages. Moreover, Mobee provides functionalities allowing you to customize your entire document generation processes using Lightning or even Apex. "},{"title":"Lightning Web Component​","type":1,"pageTitle":"Configuration and Usage","url":"/documentation/docs/documentation-api/Document Generation Module/mobee-document-configuration#lightning-web-component","content":"For manual document generation within a screen, Mobee presents a fundamental Lightning Web Component designed to generate documents for the current record based on a specified template ID. Below are the component parameters:  Current Record Id: When placed on a record page, this parameter can be left empty, as it automatically detects the ID of the current record. Multiple Record Ids (Comma Separated): This parameter can be left empty when generating unitary documents and will be used for combined document templates later. Attach to Record: A flag indicating whether the user wishes to attach the generated document to the Notes &amp; Attachments of the current record. If unchecked, the document will be automatically downloaded. Current Object API Name: When placed on a record page, this parameter can be left empty, as it automatically detects the object API Name of the current record. Selected Template Id: Informs the component about the template to be used for the generation. Show Generate Button: A flag indicating whether a physical button is desired to trigger the generation. If unchecked, document generation will be triggered upon loading the page containing the component. Output Format: This parameter indicates the desired format for the generated file. Mobee currently supports docx and pdf. Usage: This component is suitable for use in both &quot;Record Lightning Pages&quot; and &quot;Flow Screens.&quot; To harness the full capabilities of this component, it is recommended to use it in Flow Screens. Leveraging Flow's flexibility enables dynamic fetching of the desired template based on specific search criteria, providing a dynamic parameter to the component, and avoiding the inclusion of parameters in hard text. Here's an example of its usage in a Screen Flow.  "},{"title":"Action Button​","type":1,"pageTitle":"Configuration and Usage","url":"/documentation/docs/documentation-api/Document Generation Module/mobee-document-configuration#action-button","content":"The Mobee package seamlessly integrates with Salesforce record pages, providing an out-of-the-box Flow that can be effortlessly added as an action button. Creating the Action Button: Navigate to the object manager and select the object where you want the generation button to be available.Go to the &quot;Buttons, Links, and Actions&quot; section and click on the &quot;New Action&quot; button.Choose the &quot;Lightning Web Component&quot; option for the &quot;Action Type,&quot; and select &quot;Mobee:documentGeneratorAction&quot; for the &quot;Lightning Web Component.&quot;  Adding the Action Button to a Page Layout: Once the action button is created, follow these steps to add it to a desired &quot;Page Layout.&quot; Open the &quot;Page Layouts&quot; section from the object manager and select the desired page where you want to add your button.Locate your newly created button in the &quot;Mobile &amp; Lightning Actions&quot; Section.Drag the button and drop it into the &quot;Salesforce Mobile and Lightning Experience Action&quot; section.  Utilizing the Added Button: To utilize the added button, follow these steps: Navigate to a record of the same object type as the created document template.Click the &quot;Generate Document&quot; action button.Select the desired template from the provided selection list.The document will be generated and automatically downloaded.  "},{"title":"List View Button​","type":1,"pageTitle":"Configuration and Usage","url":"/documentation/docs/documentation-api/Document Generation Module/mobee-document-configuration#list-view-button","content":"Similar to the aforementioned action button, Mobee extends its functionality by offering a Flow that can be invoked from list view buttons. This feature emphasizes the capability to generate documents for multiple records simultaneously. Creating a List View Button: Follow these steps to create the button: Prepare a template to be used on the desired main object.From the Setup screen, select the desired main object.Go to the &quot;Buttons, Links, and Actions&quot; section.Click on the top-right &quot;New Button or Link&quot; button.Complete the required Label and Name input fields.Select List Button from the &quot;Display Type&quot; and ensure that the &quot;Display Checkboxes (for Multi-Record Selection)&quot; option is checked.In the formula text area, input the following path and replace the template ID with your desired template: /flow/Mobee__ListViewDocumentGenerator?templateId=a057Q000005Yd7BQAS&amp;attachToRecord=false&amp;outputFormat=pdf  Adding the Button to the List View: To add the button to the list view, follow these steps: From the &quot;Object Manager&quot;, access the &quot;List View Button Layout&quot; section.For the list view layout, click the dropdown button on the right and select &quot;Edit.&quot;In the List View Editor, find your button in the &quot;Custom Buttons&quot; section and add it to the Selected Buttons List.Click on Save. Utilizing the Added Button: To utilize the list view button, follow these steps: Go to the object list view.Select your desired records by clicking on the checkbox on each line.Locate your button in the button list in the top actions section.Click on the button, which will open the flow in a new page and generate the documents. Note: This &quot;Custom Button&quot; can also be used for Related List Views. "},{"title":"Apex Client​","type":1,"pageTitle":"Configuration and Usage","url":"/documentation/docs/documentation-api/Document Generation Module/mobee-document-configuration#apex-client","content":"Document generation is not always a user-triggered functionality; at times, there's a need to generate documents from triggers, jobs, and other automated processes. To facilitate this, Mobee provides an Apex function that enables seamless document generation tailored to specific requirements. The function is accessible within the Mobee package by invoking the Mobee.DocumentTemplaterController.generateDocuments function. Similar to the Lightning Web Component, this Apex function takes four parameters as input: A list of Salesforce record IDs for which documents need to be generated. (It can be a list containing a single ID)The Mobee Document Template ID to be used as the template for the generation.The desired output format (docx or pdf).A flag indicating whether to attach the generated file to the given record. This function returns a Map containing the generated file as Blob indexed by their respective record IDs. Here's an example of utilizing this Apex function: Context: In this example, the Mobee Template Main Object is the Application__c custom object, and the template Id is stored in the ContractTemplate__c lookup field, which is on the parent field Sector__c. public class DocumentGeneration { @Future(callout=true) public static void generateContract(String applicationId) { String OUTPUT_FORMAT = 'pdf'; Application__c application = [SELECT Id, Sector__c.ContractTemplate__c FROM Application__c WHERE Id = :applicationId]; if (application.Sector__c.ContractTemplate__c == null) { throw new Mobee.DocumentGenerationException('Template is not defined on this Sector.'); } Map&lt;Id, Blob&gt; generatedDocuments; if (Test.isRunningTest()) { generatedDocuments = generateDocumentMock(new List&lt;Id&gt;{applicationId}); } else { generatedDocuments = Mobee.DocumentTemplaterController.generateDocuments( // recordsIds new List&lt;String&gt;{applicationId}, // templateId application.Sector__c.ContractTemplate__c, // outputFormat OUTPUT_FORMAT, // attachToRecords false); } Blob generatedDocument = generatedDocuments.get(applicationId); if (generatedDocument == null) { throw new Mobee.DocumentGenerationException('Error while generating document.'); } // Do whatever you want with the Blob... } }  "},{"title":"QR Code Generator Setup","type":0,"sectionRef":"#","url":"/documentation/docs/documentation-api/QR Code Module/qr-code-generator-guide","content":"","keywords":""},{"title":"Installation:​","type":1,"pageTitle":"QR Code Generator Setup","url":"/documentation/docs/documentation-api/QR Code Module/qr-code-generator-guide#installation","content":"Before leveraging the QR Code Generator component, ensure that the Mobee package is installed in your Salesforce environment. "},{"title":"How to Add the QR Code Generator to an Object Page:​","type":1,"pageTitle":"QR Code Generator Setup","url":"/documentation/docs/documentation-api/QR Code Module/qr-code-generator-guide#how-to-add-the-qr-code-generator-to-an-object-page","content":""},{"title":"Step-by-Step Instructions:​","type":1,"pageTitle":"QR Code Generator Setup","url":"/documentation/docs/documentation-api/QR Code Module/qr-code-generator-guide#step-by-step-instructions","content":"Access the Object Page: Navigate to the desired object page where you want the QR code generator.Enter Edit Mode: Click on the 'Edit Page' option, usually found at the top right, to switch to the Lightning App Builder.Add the QR Code Generator Component: In the Lightning App Builder, look for the lightning components section on the left pane.Drag the 'generateQrCode' component and place it at your preferred location on the page layout. Configure Component Attributes: The component is designed to automatically fetch the record ID of the object where it's placed, and use it for the QR code generation. No manual input is required. Save &amp; Activate: Once configured, save your changes and activate the page to reflect the modifications in the Salesforce interface. "},{"title":"Example Use Case: Generating QR Code for a Contact Record​","type":1,"pageTitle":"QR Code Generator Setup","url":"/documentation/docs/documentation-api/QR Code Module/qr-code-generator-guide#example-use-case-generating-qr-code-for-a-contact-record","content":"Navigate to a Contact: Start by accessing a specific Contact in Salesforce where you'd like a QR code. Enter Edit Mode: Click on 'Edit Page'. Insert QR Code Generator Component: Locate the 'generateQrCode' component in the left menu section.Drag and drop it to your desired position on the Contact page layout. QR Code Generation: Once placed and the page is saved, the component will automatically generate a QR code containing the Contact record ID.  Note: Make sure you have the necessary permissions to add components to page layouts in Salesforce. Happy QR Code Generating! "},{"title":"Template Types and Syntax","type":0,"sectionRef":"#","url":"/documentation/docs/documentation-api/Document Generation Module/mobee-document-types","content":"","keywords":""},{"title":"Template Types​","type":1,"pageTitle":"Template Types and Syntax","url":"/documentation/docs/documentation-api/Document Generation Module/mobee-document-types#template-types","content":"Mobee supports two types of templates: "},{"title":"Simple Document Template​","type":1,"pageTitle":"Template Types and Syntax","url":"/documentation/docs/documentation-api/Document Generation Module/mobee-document-types#simple-document-template","content":"When the checkbox Combined Document is not checked, the template is designed for unitary generation. This means that the template includes information for one only. For instance, if you create a simple template for the &quot;Contact&quot; object, it will incorporate the information of one contact and its related data. "},{"title":"Combined Document Template​","type":1,"pageTitle":"Template Types and Syntax","url":"/documentation/docs/documentation-api/Document Generation Module/mobee-document-types#combined-document-template","content":"When the checkbox Combined Document is checked, it indicates that the template will be generated for multiple records simultaneously. This template employs a special syntax to loop through a list of records. To access fields on each record in a combined document, your template should start by looping through the list of items using the following tag {#items}{/}. Check the loops section for more details. "},{"title":"Syntax​","type":1,"pageTitle":"Template Types and Syntax","url":"/documentation/docs/documentation-api/Document Generation Module/mobee-document-types#syntax","content":"The syntax of tags used in Mobee Templates is inspired by the language-agnostic Mustache specification. Normal tags start with an alphabetical character.Other types of tags start with special prefixes. For example: Accessing merge fields on the object: {Salutation} {firstName} {lastName}Accessing related lists data: {#cases} and {/} to start and close a tag. Check the loops section for more details.Inserting dynamic images: {%ImageUrl__c} will add the image for the field &quot;ImageUrl__c&quot;. Check the Dynamic images section for more details. For example, to access the &quot;Contact&quot; data using the given syntax in your template: Hello {Salutation} {FirstName} {LastName}!  Output: Hello Mr. John Doe!  "},{"title":"Conditions​","type":1,"pageTitle":"Template Types and Syntax","url":"/documentation/docs/documentation-api/Document Generation Module/mobee-document-types#conditions","content":"Conditions start with the # character and end with a slash. For instance, {#Salutation == &quot;Mr.&quot;} starts a condition and {/} ends it. Note: To verify checkbox fields (true or false), use the following syntax: The contact {Name} {#HasOptedOutOfEmail == 1}has{/}{#HasOptedOutOfEmail == 0}hasn’t{/} opted out of emails.  Output: The contact Mr. John Doe has opted out of emails.  "},{"title":"Logical expressions​","type":1,"pageTitle":"Template Types and Syntax","url":"/documentation/docs/documentation-api/Document Generation Module/mobee-document-types#logical-expressions","content":"You can use the following operators for more complex logical expressions: AND a &amp;&amp; bOR a || bADDITION a + bSUBTRACTION a - bMULTIPLICATION a * bMODULO a % bDIVISION a / bTERNARY a ? b : cASSIGNMENT a = 1EQUALITY/INEQUALITY a == 1, a != 1RELATIONAL a &gt; 1, a &lt; 1, a &gt;= 1, a &lt;= 1OPERATOR PRECEDENCE with parentheses (a &amp;&amp; b) || cEXPONENTIAL NOTATION: 12e3 =&gt; returns 12000 Example: {#products.length &gt; 1}There are multiple products{/} {#firstName == &quot;John&quot;}Hello John{/}  The first condition will display the section only if there are 2 or more products. The second condition will display the section only if the username is the string &quot;John&quot;. Output: There are multiple products Hello John  "},{"title":"Loops​","type":1,"pageTitle":"Template Types and Syntax","url":"/documentation/docs/documentation-api/Document Generation Module/mobee-document-types#loops","content":"As mentioned earlier, we start looping through a list of data with the &quot;#&quot; symbol. Example: {#Cases} {CaseNumber}: {Description}. {/}  Output: 00001299: Need Access Permission to visit location. 00001624: Support Client. 00001836: The cable of the battery charger is missing.  Note: Each merge field used in the loop section refers to the fields of the current related object. If the field is not found on the related object, the engine will reference it from the parent object. "},{"title":"Dynamic Images​","type":1,"pageTitle":"Template Types and Syntax","url":"/documentation/docs/documentation-api/Document Generation Module/mobee-document-types#dynamic-images","content":"Dynamic images can be seamlessly integrated into your generated documents through the utilization of dynamic placeholders. For example, if you possess a field named ProfilePicture__c housing the URL of an image or the image encoded as a Base64 string, it can be incorporated into your document effortlessly using the designated tag: {%ProfilePicture__c} (starting with the % symbol). "},{"title":"Base64 Images​","type":1,"pageTitle":"Template Types and Syntax","url":"/documentation/docs/documentation-api/Document Generation Module/mobee-document-types#base64-images","content":"To include an image using base64 data, simply encode the image into Base64 format and store it directly in your salesforce field. "},{"title":"URL Images​","type":1,"pageTitle":"Template Types and Syntax","url":"/documentation/docs/documentation-api/Document Generation Module/mobee-document-types#url-images","content":"To incorporate an image using a URL, adhere to the following procedural steps: Navigate to &quot;Setup&quot; within Salesforce.In the quick find box, locate and select &quot;Remote Site Settings.&quot;Click the &quot;New Remote Site&quot; button.Assign a name for the site (e.g., &quot;Imgur Site&quot;).In the &quot;Remote Site URL&quot; field, input the base URL of the image's location—such as &quot;https://i.imgur.com.&quot;Enable the &quot;Disable Protocol Security&quot; checkbox to permit retrieval over HTTP.Select &quot;Save&quot; to preserve the changes.  Proceed with the following steps to incorporate the URL into the trusted URLs with all Content Security Policy (CSP) directives enabled: In the setup page, locate &quot;Trusted URLs&quot; using the quick find box.Select the &quot;New Trusted Site&quot; button.Assign a name for the trusted site (e.g., &quot;Imgur Trusted&quot;).In the &quot;Site URL&quot; field, input the same base URL as before, namely &quot;https://i.imgur.com.&quot;Enable all CSP directives: &quot;Connect,&quot; &quot;Font,&quot; &quot;Img,&quot; &quot;Media,&quot; &quot;Object,&quot; &quot;Script,&quot; &quot;Style.&quot;Confirm the changes by clicking &quot;Save.&quot;   You have now set up remote site settings and trusted URLs to securely retrieve the image over HTTP. You can then use the {% ProfilePicture__c} tag to dynamically include the image in your generated documents. "},{"title":"Additional functionalities​","type":1,"pageTitle":"Template Types and Syntax","url":"/documentation/docs/documentation-api/Document Generation Module/mobee-document-types#additional-functionalities","content":"Mobee provides several tags and filters to help users customize their documents. "},{"title":"Dates​","type":1,"pageTitle":"Template Types and Syntax","url":"/documentation/docs/documentation-api/Document Generation Module/mobee-document-types#dates","content":"The {docUtils.today} tag is a predefined element that enables the inclusion of the current date in a document template during the generation process. In addition to the filters outlined below, users have the flexibility to manipulate this date according to their specific requirements. "},{"title":"Filters​","type":1,"pageTitle":"Template Types and Syntax","url":"/documentation/docs/documentation-api/Document Generation Module/mobee-document-types#filters","content":"Filters are predefined functions designed for the manipulation of strings, dates, and numbers within document templates. They can be applied to any tag by appending the pipe character | followed by the desired filter. Here is an illustrative example of the syntax: Hello {Salutation} {FirstName} {LastName | upper}!  Output: Hello Mr. John DOE!  The following tags and filters are currently supported: String filters: lower: Utilized to convert text to lowercase.upper: Utilized to convert text to uppercase. Date Filters: shortDate: Utilized to convert the date in a concise shorter format.followingMonth: Utilized to return the subsequent month based on a given date.followingYear: Utilized to return the subsequent year based on a given date.lastWorkingDayOfMonth: Utilized to return the last working day of the month based on a given date.formatDate: A versatile filter for formatting various date values. Usage example: The created date is {StartDate | shortDate} The following month is {StartDate | followingMonth: '[[&quot;year&quot;: &quot;numeric&quot;, &quot;month&quot;: &quot;long&quot;]]'} The following year is {StartDate | followingYear: '[[&quot;year&quot;: &quot;numeric&quot;]]'} The last working day of the month is {StartDate | lastWorkingDayOfMonth}  Output: The created date is 21/01/2022 The following month is février 2022 The following year is 2023 The last working day of the month is 31/01/2022  The followingMonth, followingYear, lastWorkingDayOfMonth, and formatDate functions accept the following formatting options: [[ weekday: 'narrow' | 'short' | 'long', era: 'narrow' | 'short' | 'long', year: 'numeric' | '2-digit', month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long', day: 'numeric' | '2-digit', hour: 'numeric' | '2-digit', minute: 'numeric' | '2-digit', second: 'numeric' | '2-digit', timeZoneName: 'short' | 'long', // Time zone to express it in timeZone: 'Asia/Shanghai', // Force 12-hour or 24-hour hour12: true | false, // Rarely-used options hourCycle: 'h11' | 'h12' | 'h23' | 'h24', formatMatcher: 'basic' | 'best fit' ]]  "},{"title":"QR Code Scanner Setup","type":0,"sectionRef":"#","url":"/documentation/docs/documentation-api/QR Code Module/qr-code-scanner-guide","content":"","keywords":""},{"title":"Installation:​","type":1,"pageTitle":"QR Code Scanner Setup","url":"/documentation/docs/documentation-api/QR Code Module/qr-code-scanner-guide#installation","content":"Before utilizing the QR Code Scanner component, ensure that the Mobee package is installed in your Salesforce environment. "},{"title":"How to Add the QR Code Scanner to an Object Page:​","type":1,"pageTitle":"QR Code Scanner Setup","url":"/documentation/docs/documentation-api/QR Code Module/qr-code-scanner-guide#how-to-add-the-qr-code-scanner-to-an-object-page","content":""},{"title":"Step-by-Step Instructions:​","type":1,"pageTitle":"QR Code Scanner Setup","url":"/documentation/docs/documentation-api/QR Code Module/qr-code-scanner-guide#step-by-step-instructions","content":"Access the Object Page: Navigate to the desired object page where you want to add the QR code scanner.Enter Edit Mode: Click on the 'Edit Page' option, usually available at the top right of the screen, to enter the Lightning App Builder.Add the QR Code Scanner Component: In the Lightning App Builder, look for the lightning components section on the left pane.Drag the 'scanQrCode' component and drop it onto the desired place on your page layout. Configure Component Attributes: Click on the added QR Code Scanner component to view its properties.In the 'Flow API Name' field, type in the desired flow's API name (preceded by the namespace prefix if you're using the built in Mobee Campaign Scan Flow). This flow will be executed when a QR code is scanned by the component.The attribute &quot;Record ID&quot; can be left empty. If left blank, it will automatically be populated with the ID of the record where the component is placed. Save &amp; Activate: Once done, save the changes and activate the page to reflect them in the Salesforce interface. "},{"title":"Essential Notes:​","type":1,"pageTitle":"QR Code Scanner Setup","url":"/documentation/docs/documentation-api/QR Code Module/qr-code-scanner-guide#essential-notes","content":"It's crucial to create the scannedId variable when establishing a flow that uses the QR code scanner, as this variable will store the ID of the scanned object. "},{"title":"Example Use Case: Add Contacts or Leads to a Campaign via QR Code Scanning​","type":1,"pageTitle":"QR Code Scanner Setup","url":"/documentation/docs/documentation-api/QR Code Module/qr-code-scanner-guide#example-use-case-add-contacts-or-leads-to-a-campaign-via-qr-code-scanning","content":"Navigate to Campaign: Start by accessing the desired campaign in Salesforce. Enter Edit Mode: Click on 'Edit Page' to switch to the Lightning App Builder. Insert QR Code Scanner Component: Find the 'scanQrCode' component under the 'Custom' section on the left.Drag and place the component where you want it on the campaign page layout. Configure the Component: Click on the component to see its attributes.In the 'Flow API Name' field, enter the name &quot;Mobee__Campaign_SCR_Scan&quot; (or the relevant flow name associated with the scanning function for campaigns). Perform Scanning: Exit the Lightning App Builder and navigate to the campaign page.Using a phone or a device with a camera, utilize the QR Code Scanner component to scan the QR codes of contacts or leads. Verification: After scanning, verify by checking the campaign membership list.Ensure that the scanned contact or lead has been successfully added to the campaign. Note: Ensure that the flow (&quot;Mobee__Campaign_SCR_Scan&quot; in this example) is correctly set up to handle the QR code data and perform the desired actions in Salesforce. "},{"title":"QR Code Scanner Integration for Campaign Membership Management​","type":1,"pageTitle":"QR Code Scanner Setup","url":"/documentation/docs/documentation-api/QR Code Module/qr-code-scanner-guide#qr-code-scanner-integration-for-campaign-membership-management","content":""},{"title":"Overview​","type":1,"pageTitle":"QR Code Scanner Setup","url":"/documentation/docs/documentation-api/QR Code Module/qr-code-scanner-guide#overview","content":"&quot;Mobee__Campaign_SCR_Scan&quot;, provided as a template flow in the Mobee package, seamlessly integrates with the QR code scanner module. It facilitates the addition of a contact or a lead to a campaign's membership list. Given its design as a template, this flow is highly adaptable to meet varying requirements. "},{"title":"Flow Functionality:​","type":1,"pageTitle":"QR Code Scanner Setup","url":"/documentation/docs/documentation-api/QR Code Module/qr-code-scanner-guide#flow-functionality","content":"Scanning and Identifying the ID: Upon scanning, the ID is retrieved and stored in the variable scannedId.The flow checks if this scannedId corresponds to a Lead or a Contact. Unknown ID Handling: If the scannedId does not match a Lead or Contact, the flow redirects to a Screen displaying a message stating that the ID is unknown. Checking Campaign Membership: If the scannedId is identified as a Lead or Contact, the flow then verifies if the respective record is already part of the campaign members of the campaign associated with the recordId (i.e., the campaign where the scanner module is placed). Handling Contact's Account Information: For contacts, due to the offline nature of the scan on Mobee, the flow manually fetches the related account information using GetCompanyById. As of now, in the offline mode of Mobee, there is a limitation wherein related fields embedded within Salesforce flows can't be accessed directly. This issue is set to be addressed in upcoming updates. Adding to Campaign Membership: If the Lead or Contact is not a member of the campaign, they are added to the campaign's membership list.Their status is set to 'Responded', though this can be customized within the flow as per requirements. Updating Existing Campaign Member: If the Lead or Contact is already a member of the campaign, their status will be updated to 'Responded'. Happy Scanning! "},{"title":"Admin Guide","type":0,"sectionRef":"#","url":"/documentation/docs/documentation-api/Timesheet Module/Admin Guide","content":"","keywords":""},{"title":"Introduction​","type":1,"pageTitle":"Admin Guide","url":"/documentation/docs/documentation-api/Timesheet Module/Admin Guide#introduction","content":"This user guide will help you understand and use the Time Entries management features in our system. You will find step-by-step instructions to add new projects and assignments, as well as how to view your colleagues' Time Entries. "},{"title":"Adding a New Project from an Opportunity​","type":1,"pageTitle":"Admin Guide","url":"/documentation/docs/documentation-api/Timesheet Module/Admin Guide#adding-a-new-project-from-an-opportunity","content":""},{"title":"Navigate to the Opportunity​","type":1,"pageTitle":"Admin Guide","url":"/documentation/docs/documentation-api/Timesheet Module/Admin Guide#navigate-to-the-opportunity","content":"Step 1: Access the &quot;Opportunities&quot; module Log in to your Salesforce account.Go to the Salesforce homepage.In the top navigation bar, click on the &quot;Opportunities&quot; tab to open the list of opportunities.Choose the relevant opportunity. Step 2: Click on the &quot;New Project&quot; toolbar button to create a project from the opportunity.  The system will launch a dialog box with variables initialized from the opportunity as follows: (complete the required fields according to your needs)  The &quot;New Project&quot; form is presented to the user with many fields pre-filled from the opportunity. This facilitates data entry and reduces errors. "},{"title":"Adding a New \"Assignment\" from the Project​","type":1,"pageTitle":"Admin Guide","url":"/documentation/docs/documentation-api/Timesheet Module/Admin Guide#adding-a-new-assignment-from-the-project","content":""},{"title":"Navigate to the Relevant Project​","type":1,"pageTitle":"Admin Guide","url":"/documentation/docs/documentation-api/Timesheet Module/Admin Guide#navigate-to-the-relevant-project","content":"Step 1: Access the project page Access the list of projects by clicking on the &quot;Projects&quot; tab in the top navigation bar.Select the project to which you want to add a new &quot;Assignment.&quot;  Step 2: Add a New &quot;Assignment&quot; On the relevant project page,Click on the &quot;New Assignment&quot; button to create a new assignment.Fill in the assignment details, such as the assignee's name, price, quantity, work description, start and end dates, etc.Save the newly created assignment. The &quot;New Assignment&quot; form is presented to the user, with many fields pre-filled from the project. This facilitates data entry and reduces errors.  "},{"title":"Viewing Time Entries of Salesforce Community Users​","type":1,"pageTitle":"Admin Guide","url":"/documentation/docs/documentation-api/Timesheet Module/Admin Guide#viewing-time-entries-of-salesforce-community-users","content":""},{"title":"Navigate to the Relevant Contact​","type":1,"pageTitle":"Admin Guide","url":"/documentation/docs/documentation-api/Timesheet Module/Admin Guide#navigate-to-the-relevant-contact","content":"Each Salesforce Community user is created as a Contact in Salesforce. Step 1: Access &quot;Contacts&quot; Access the list of contacts by clicking on the &quot;Contacts&quot; tab in the top navigation bar.Select the contact (colleague) for whom you want to view the Time Entries.Use the available filter on the contact page.The Contact page is displayed with the details. Step 2: Access the &quot;Time Entries.&quot; The Time Entries are displayed in the tab: "},{"title":"Viewing Time Entries of Standard Salesforce Users​","type":1,"pageTitle":"Admin Guide","url":"/documentation/docs/documentation-api/Timesheet Module/Admin Guide#viewing-time-entries-of-standard-salesforce-users","content":""},{"title":"Use the Global Search Bar.​","type":1,"pageTitle":"Admin Guide","url":"/documentation/docs/documentation-api/Timesheet Module/Admin Guide#use-the-global-search-bar","content":"Enter the colleague's name in the search bar. A list will show users matching the criteria and the nature of the found object (Account, Contact, User, etc.).Choose &quot;User,&quot; and the system will direct you to the relevant user.The timesheet will be displayed at the top of the page as follows:  "},{"title":"Custom Email Template","type":0,"sectionRef":"#","url":"/documentation/docs/documentation-api/QR Code Module/qr-codes-in-email-template","content":"","keywords":""},{"title":"Email Template Setup​","type":1,"pageTitle":"Custom Email Template","url":"/documentation/docs/documentation-api/QR Code Module/qr-codes-in-email-template#email-template-setup","content":"Open your Classic Email Templates: Go to your Salesforce Setup page, and look for the Classic Email Templates page.Create a new Email Template: Click on the New Template button, Custom (without using Classic Letterhead). Then fill the required fields on the Email Template Information page. "},{"title":"Template Content​","type":1,"pageTitle":"Custom Email Template","url":"/documentation/docs/documentation-api/QR Code Module/qr-codes-in-email-template#template-content","content":""},{"title":"Subject:​","type":1,"pageTitle":"Custom Email Template","url":"/documentation/docs/documentation-api/QR Code Module/qr-codes-in-email-template#subject","content":"Invitation to {!Contact.Name}  "},{"title":"HTML Body:​","type":1,"pageTitle":"Custom Email Template","url":"/documentation/docs/documentation-api/QR Code Module/qr-codes-in-email-template#html-body","content":"&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Invitation&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;Dear valued customer,&lt;/p&gt; &lt;p&gt;We are excited to invite you to our event. Please find your personalized QR code below:&lt;/p&gt; &lt;img src=&quot;https://api.mobee-app.com/qr-code?width=200&amp;data={!CASESAFEID(Contact.Id)}&quot; alt=&quot;QR Code&quot;&gt; &lt;p&gt;This QR code is linked to your account. Your participation is highly appreciated.&lt;/p&gt; &lt;p&gt;Thank you!&lt;/p&gt; &lt;p&gt;Sincerely,&lt;br&gt;Your Organization&lt;/p&gt; &lt;/body&gt; &lt;/html&gt;  "},{"title":"Sample HTML Body Preview:​","type":1,"pageTitle":"Custom Email Template","url":"/documentation/docs/documentation-api/QR Code Module/qr-codes-in-email-template#sample-html-body-preview","content":" "},{"title":"Resulting Email​","type":1,"pageTitle":"Custom Email Template","url":"/documentation/docs/documentation-api/QR Code Module/qr-codes-in-email-template#resulting-email","content":"After the template is processed by Salesforce, the email will be sent to clients. Here's what the resulting email might look like: Sample Email Result:  "},{"title":"Explanation​","type":1,"pageTitle":"Custom Email Template","url":"/documentation/docs/documentation-api/QR Code Module/qr-codes-in-email-template#explanation","content":"The email template is set up as a Custom type, which means you have control over the content and layout.Classic Letterhead is not used, so the email won't have a predefined header/footer from a letterhead template.The subject of the email is dynamically generated using merge fields. {!Contact.Name} inserts the contact's name into the subject line.The HTML body of the email is where the main content resides.The img tag sources the QR code image from a URL. The URL includes the CASESAFEID(Contact.Id) merge field to dynamically generate the QR code based on the recipient's contact ID.A paragraph below the QR code explains the purpose of the QR code and its association with the recipient's contact.The email concludes with a thank you message and the sender's organization information. "},{"title":"Personalization​","type":1,"pageTitle":"Custom Email Template","url":"/documentation/docs/documentation-api/QR Code Module/qr-codes-in-email-template#personalization","content":"This template provides a personalized invitation experience for each recipient by incorporating their contact name and a QR code linked to their specific contact. This approach enhances client engagement and delivers a unique invitation experience through Salesforce email templates. "}]